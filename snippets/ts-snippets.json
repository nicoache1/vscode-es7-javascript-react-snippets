{
  "typeScriptReactClassComponent": {
    "prefix": "tsrcc",
    "body": [
      "import React, { Component } from 'react'",
      "",
      "interface Props {",
      "\t",
      "}",
      "interface State {",
      "\t",
      "}",
      "",
      "export default class ${1:${TM_FILENAME_BASE}} extends Component<Props, State> {",
      "\tstate = {}",
      "",
      "\trender() {",
      "\t\treturn (",
      "\t\t\t<div>",
      "\t\t\t\t$0",
      "\t\t\t</div>",
      "\t\t)",
      "\t}",
      "}",
      ""
    ],
    "description": "Creates a React component class with ES7 module system and TypeScript interfaces"
  },
  "typeScriptReactClassExportComponent": {
    "prefix": "tsrce",
    "body": [
      "import React, { Component } from 'react'",
      "",
      "interface Props {",
      "\t",
      "}",
      "interface State {",
      "\t",
      "}",
      "",
      "class ${1:${TM_FILENAME_BASE}} extends Component<Props, State> {",
      "\tstate = {}",
      "",
      "\trender() {",
      "\t\treturn (",
      "\t\t\t<div>",
      "\t\t\t\t$0",
      "\t\t\t</div>",
      "\t\t)",
      "\t}",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}",
      ""
    ],
    "description": "Creates a React component class with ES7 module system and TypeScript interfaces"
  },
  "typeScriptReactFunctionalExportComponent": {
    "prefix": "tsrfce",
    "body": [
      "import React, { ReactElement } from 'react'",
      "",
      "interface Props {",
      "\t",
      "}",
      "",
      "function ${1:${TM_FILENAME_BASE}}({}: Props): ReactElement {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t$0",
      "\t\t</div>",
      "\t)",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}",
      ""
    ],
    "description": "Creates a React Functional Component with ES7 module system and TypeScript interface"
  },
  "typeScriptReactFunctionalComponent": {
    "prefix": "tsrfc",
    "body": [
      "import React, { ReactElement } from 'react'",
      "",
      "interface Props {",
      "\t",
      "}",
      "",
      "export default function ${1:${TM_FILENAME_BASE}}({}: Props): ReactElement {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t$0",
      "\t\t</div>",
      "\t)",
      "}",
      ""
    ],
    "description": "Creates a React Functional Component with ES7 module system and TypeScript interface"
  },
  "typeScriptReactArrowFunctionExportComponent": {
    "prefix": "tsrafce",
    "body": [
      "import React from 'react'",
      "",
      "interface Props {",
      "\t",
      "}",
      "",
      "const ${1:${TM_FILENAME_BASE}} = (props: Props) => {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t$0",
      "\t\t</div>",
      "\t)",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}",
      ""
    ],
    "description": "Creates a React Arrow Function Component with ES7 module system and TypeScript interface"
  },
  "typeScriptReactArrowFunctionComponent": {
    "prefix": "tsrafc",
    "body": [
      "import React from 'react'",
      "",
      "interface Props {",
      "\t",
      "}",
      "",
      "export const ${1:${TM_FILENAME_BASE}} = (props: Props) => {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t$0",
      "\t\t</div>",
      "\t)",
      "}",
      ""
    ],
    "description": "Creates a React Arrow Function Component with ES7 module system and TypeScript interface"
  },
  "typeScriptReactClassPureComponent": {
    "prefix": "tsrpc",
    "body": [
      "import React, { PureComponent } from 'react'",
      "",
      "interface Props {",
      "\t",
      "}",
      "",
      "export default class ${1:${TM_FILENAME_BASE}} extends PureComponent<Props> {",
      "\trender() {",
      "\t\treturn (",
      "\t\t\t<div>",
      "\t\t\t\t$0",
      "\t\t\t</div>",
      "\t\t)",
      "\t}",
      "}",
      ""
    ],
    "description": "Creates a React pure component class with ES7 module system and TypeScript interface"
  },
  "typeScriptReactFunctionMemoComponent": {
    "prefix": "tsrmc",
    "body": [
      "import React, { memo } from 'react'",
      "",
      "interface Props {",
      "\t",
      "}",
      "",
      "export default memo(function ${1:${TM_FILENAME_BASE}}({}: Props) {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t$0",
      "\t\t</div>",
      "\t)",
      "})",
      ""
    ],
    "description": "Creates a React Memo Function Component with ES7 module system and TypeScript interface"
  },
  "typescriptReactNativeArrowFunctionComponent": {
    "prefix": "tsrnf",
    "body": [
      "import React from 'react'",
      "import { View, Text } from 'react-native'",
      "",
      "interface LayoutProps {",
      "\t",
      "}",
      "",
      "export const ${1:${TM_FILENAME_BASE}}: React.FC<LayoutProps> = ({}) => {",
      "\treturn (",
      "\t\t<View>",
      "\t\t\t<Text>$0</Text>",
      "\t\t</View>",
      "\t)",
      "}",
      "",
      ""
    ],
    "description": "Creates a React Native Arrow Function Component with ES7 module system and TypeScript interface"
  },
  "typescriptReactNativeArrowFunctionComponentNamedProps": {
    "prefix": "tsrnfis",
    "body": [
      "import React from 'react'",
      "import { View, Text, StyleSheet } from 'react-native'",
      "",
      "interface ${1:${TM_FILENAME_BASE}}Props {",
      "\t",
      "}",
      "",
      "const styles = StyleSheet.create({",
      "\tcontainer: {",
      "\t\talignItems: \"center\",",
      "\t\tflex: 1,",
      "\t\tjustifyContent: \"center\"",
      "\t}",
      "})",
      "",
      "export const ${1:${TM_FILENAME_BASE}}: React.FC<${1:${TM_FILENAME_BASE}}Props> = ({}) => {",
      "\treturn (",
      "\t\t<View style={styles.container}>",
      "\t\t\t<Text>Hi</Text>",
      "\t\t</View>",
      "\t)",
      "}",
      ""
    ],
    "description": "Creates a React Native Arrow Function Component with ES7 module system and named TypeScript interface"
  },
  "Export interface": {
    "prefix": "expint",
    "body": ["export interface ${1:${TM_FILENAME_BASE}} {$0}"]
  },
  "Export type": {
    "prefix": "exptp",
    "body": ["export type ${1:${TM_FILENAME_BASE}} = {$0}"]
  },
  "Animated Style - Reanimated 2": {
    "prefix": "useAnimatedStyle",
    "body": [
      "const animatedStyle = useAnimatedStyle(() => ({",
      "\ttransform: [{translateY: sharedValue.value}]",
      "}))"
    ]
  },
  "Shared Value - Reanimated 2": {
    "prefix": "useSharedValue",
    "body": ["const ${1} = useSharedValue<number>(0)"]
  },
  "Derived Value - Reanimated 2": {
    "prefix": "useDerivedValue",
    "body": [
      "const derivedValue = useDerivedValue(() => {",
      "\treturn {",
      "\t\t${1}",
      "\t}",
      "}, [])"
    ]
  },
  "Animated Props - Reanimated 2": {
    "prefix": "useAnimatedProps",
    "body": [
      "const animatedProps = useAnimatedProps(() => {",
      "\treturn {",
      "\t\t${1}",
      "\t}",
      "})"
    ]
  },
  "Animated Gesture Handler - Reanimated 2": {
    "prefix": "animatedPanGesture",
    "body": [
      "const gestureHandler = useAnimatedGestureHandler<",
      "\tPanGestureHandlerGestureEvent,",
      "\t { offsetY: number, offsetX: number }",
      ">({",
      "\t\t onActive: ({ translationY }, context) => {",
      "\t\t\t translateY.value = translationY + context.offsetY",
      "\t\t },",
      "\t\tonStart: (_event, context) => {",
      "\t\t\t context.offsetY = translateY.value",
      "\t\t },",
      "})"
    ]
  },
  "Animated Tap Handler - Reanimated 2": {
    "prefix": "animatedTapGesture",
    "body": [
      "const tapGestureEvent = useAnimatedGestureHandler<",
      "\tTapGestureHandlerGestureEvent,",
      "\t any",
      ">({",
      "\t\t onActive: () => {",
      "\t\t\t runOnJS(onPress)()",
      "\t\t },",
      "})"
    ]
  }
}
